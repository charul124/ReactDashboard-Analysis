{"ast":null,"code":"var _jsxFileName = \"/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/TableModal.jsx\",\n  _s = $RefreshSig$();\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport TableData from '../data/tableData.json';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableModal({\n  id,\n  IsOpen,\n  setIsOpen,\n  handleHeadings\n}) {\n  _s();\n  const [selectedHeadings, setSelectedHeadings] = useState([]);\n  useEffect(() => {\n    if (IsOpen) {\n      console.log(\"Fetching headings...\");\n      const newHeadings = [];\n      Object.values(TableData).forEach(row => {\n        Object.keys(row).forEach(key => {\n          if (!newHeadings.includes(key)) {\n            newHeadings.push(key);\n          }\n        });\n      });\n      setSelectedHeadings(newHeadings);\n    }\n  }, [IsOpen]);\n  const handleHeadingChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelectedHeadings(prev => checked ? [...prev, name] : prev.filter(heading => heading !== name));\n  };\n  const handleSave = () => {\n    console.log(\"Saving selected headings:\", selectedHeadings);\n    handleHeadings(id, selectedHeadings);\n    closeModal();\n  };\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"w-1/2 absolute top-24 left-1/4 text-center bg-white shadow rounded p-10\",\n    isOpen: IsOpen,\n    onRequestClose: closeModal,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-bold mb-3\",\n      children: \"Select the columns you want to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), selectedHeadings === null || selectedHeadings === void 0 ? void 0 : selectedHeadings.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: element,\n        children: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: element,\n        checked: selectedHeadings.includes(element),\n        onChange: handleHeadingChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, element, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-[#062F6F] hover:bg-[#5779E8] text-white rounded w-full p-1 mt-4\",\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(TableModal, \"HzCzCcqg9x88vliTJrcM6ZlcdnM=\");\n_c = TableModal;\nTableModal.propTypes = {\n  id: PropTypes.string,\n  IsOpen: PropTypes.bool.isRequired,\n  setIsOpen: PropTypes.func.isRequired,\n  handleHeadings: PropTypes.func.isRequired\n};\nexport default TableModal;\nvar _c;\n$RefreshReg$(_c, \"TableModal\");","map":{"version":3,"names":["Modal","PropTypes","TableData","React","useState","useEffect","jsxDEV","_jsxDEV","TableModal","id","IsOpen","setIsOpen","handleHeadings","_s","selectedHeadings","setSelectedHeadings","console","log","newHeadings","Object","values","forEach","row","keys","key","includes","push","handleHeadingChange","event","name","checked","target","prev","filter","heading","handleSave","closeModal","className","isOpen","onRequestClose","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","htmlFor","type","onChange","onClick","_c","propTypes","string","bool","isRequired","func","$RefreshReg$"],"sources":["/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/TableModal.jsx"],"sourcesContent":["import Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport TableData from '../data/tableData.json';\nimport React, { useState, useEffect } from 'react';\n\nfunction TableModal({ id, IsOpen, setIsOpen, handleHeadings }) {\n    const [selectedHeadings, setSelectedHeadings] = useState([]);\n\n    useEffect(() => {\n        if (IsOpen) {\n            console.log(\"Fetching headings...\");\n            const newHeadings = [];\n\n            Object.values(TableData).forEach((row) => {\n                Object.keys(row).forEach((key) => {\n                    if (!newHeadings.includes(key)) {\n                        newHeadings.push(key);\n                    }\n                });\n            });\n\n            setSelectedHeadings(newHeadings);\n        }\n    }, [IsOpen]);\n\n    const handleHeadingChange = (event) => {\n        const { name, checked } = event.target;\n        setSelectedHeadings(prev =>\n            checked ? [...prev, name] : prev.filter(heading => heading !== name)\n        );\n    };\n\n    const handleSave = () => {\n        console.log(\"Saving selected headings:\", selectedHeadings);\n        handleHeadings(id, selectedHeadings);\n        closeModal();\n    };\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <Modal className=\"w-1/2 absolute top-24 left-1/4 text-center bg-white shadow rounded p-10\"\n               isOpen={IsOpen} \n               onRequestClose={closeModal}>\n            <h1 className='font-bold mb-3'>Select the columns you want to display</h1>\n            {selectedHeadings?.map(element => (\n                <div className='flex justify-between' key={element}> \n                    <label htmlFor={element}>{element}</label>\n                    <input type=\"checkbox\" name={element} checked={selectedHeadings.includes(element)}\n                           onChange={handleHeadingChange} />\n                </div>\n            ))}\n            <button className='bg-[#062F6F] hover:bg-[#5779E8] text-white rounded w-full p-1 mt-4' onClick={handleSave}>\n                Save\n            </button>\n        </Modal>\n    );\n}\n\nTableModal.propTypes = {\n    id: PropTypes.string,\n    IsOpen: PropTypes.bool.isRequired,\n    setIsOpen: PropTypes.func.isRequired,\n    handleHeadings: PropTypes.func.isRequired,\n};\n\nexport default TableModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}