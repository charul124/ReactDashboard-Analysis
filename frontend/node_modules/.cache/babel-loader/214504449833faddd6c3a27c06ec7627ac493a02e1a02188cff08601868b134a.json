{"ast":null,"code":"var _jsxFileName = \"/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport ChartWidget from '../components/widgets/ChartWidget';\nimport CreateTable from '../components/widgets/CreateTable'; // Import CreateTable\nimport WidgetDrawer from '../components/WidgetDrawer';\nimport TableModal from '../components/TableModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    path\n  } = useParams();\n  const [widgets, setWidgets] = useState([]);\n  const [headings, setHeadings] = useState([]);\n  const [IsOpen, setIsOpen] = useState(false);\n  const [currentWidgetId, setCurrentWidgetId] = useState(null);\n\n  //function to open the modal\n  function openModal(id) {\n    setCurrentWidgetId(id);\n    setIsOpen(true);\n  }\n\n  //function to get the stored dashboard\n  useEffect(() => {\n    const storedDashboard = JSON.parse(localStorage.getItem(`dashboard_${path}`)) || [];\n    setWidgets(storedDashboard);\n  }, [path]);\n\n  //function to receive the new headings and update in widgets\n  function handleHeadings(id, headers) {\n    setWidgets(prevWidgets => prevWidgets.map(widget => widget.id === id ? {\n      ...widget,\n      headings: headers\n    } : widget));\n  }\n\n  //function to handle drop\n  const handleDrop = e => {\n    e.preventDefault();\n    const widgetType = e.dataTransfer.getData('widgetType');\n    if (!widgetType) return;\n    let newWidget = {};\n    if (widgetType === \"Table\") {\n      const id = `widget_${Date.now()}`;\n      newWidget = {\n        id: id,\n        type: widgetType,\n        x: 350,\n        y: 50,\n        width: 500,\n        height: 300,\n        headings: headings\n      };\n      openModal(id);\n    } else if (widgetType === \"Chart\") {\n      newWidget = {\n        id: `widget_${Date.now()}`,\n        type: widgetType,\n        x: 350,\n        y: 50,\n        width: 500,\n        height: 300,\n        chartType: 'Bar',\n        filters: {\n          startDate: '2024-03-16',\n          endDate: '2025-08-20'\n        }\n      };\n    }\n    setWidgets(prevWidgets => Array.isArray(prevWidgets) ? [...prevWidgets, newWidget] : [newWidget]);\n  };\n\n  //function to update widget's position and dimension\n  const updateWidgetPosition = (id, x, y, width, height) => {\n    setWidgets(prevWidgets => prevWidgets.map(widget => widget.id === id ? {\n      ...widget,\n      x,\n      y,\n      width,\n      height\n    } : widget));\n  };\n\n  //function to delete widget\n  const handleDeleteWidget = id => {\n    setWidgets(prevWidgets => prevWidgets.filter(widget => widget.id !== id));\n  };\n\n  //function to publish and store the data of the dashboard\n  const handlePublishDashboard = () => {\n    localStorage.setItem(`dashboard_${path}`, JSON.stringify(widgets));\n    alert('Dashboard Published!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-r-2 flex flex-col text-center w-1/5 border-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-[#062F6F]\",\n        children: \"WIDGETS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ['Chart', 'Table'].map((widget, index) => /*#__PURE__*/_jsxDEV(WidgetDrawer, {\n          name: widget,\n          type: widget\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        onClick: handlePublishDashboard,\n        className: \"bg-[#5779E8] mx-4 p-2 hover:bg-[#062F6F] text-white font-bold rounded mt-4\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-4/5 text-center\",\n      onDragOver: e => e.preventDefault(),\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-[#062F6F]\",\n        children: \"YOUR DASHBOARD \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), widgets.map(widget => {\n        if (widget.type === 'Chart') {\n          return /*#__PURE__*/_jsxDEV(ChartWidget, {\n            id: widget.id,\n            x: widget.x,\n            y: widget.y,\n            width: widget.width,\n            height: widget.height,\n            chartType: widget.chartType,\n            updatePosition: updateWidgetPosition,\n            handleDeleteWidget: handleDeleteWidget\n          }, widget.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        } else if (widget.type === 'Table') {\n          return /*#__PURE__*/_jsxDEV(CreateTable, {\n            id: widget.id,\n            x: widget.x,\n            y: widget.y,\n            headings: widget.headings || ['Manufacturer'],\n            width: widget.width,\n            height: widget.height,\n            updatePosition: updateWidgetPosition,\n            handleDeleteWidget: handleDeleteWidget\n          }, widget.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(TableModal, {\n        id: currentWidgetId,\n        headings: headings,\n        setHeadings: setHeadings,\n        IsOpen: IsOpen,\n        setIsOpen: setIsOpen,\n        handleHeadings: handleHeadings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"N4m7NZs+DWSBtG4e4NG9XUPsNiw=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","ChartWidget","CreateTable","WidgetDrawer","TableModal","jsxDEV","_jsxDEV","Dashboard","_s","path","widgets","setWidgets","headings","setHeadings","IsOpen","setIsOpen","currentWidgetId","setCurrentWidgetId","openModal","id","storedDashboard","JSON","parse","localStorage","getItem","handleHeadings","headers","prevWidgets","map","widget","handleDrop","e","preventDefault","widgetType","dataTransfer","getData","newWidget","Date","now","type","x","y","width","height","chartType","filters","startDate","endDate","Array","isArray","updateWidgetPosition","handleDeleteWidget","filter","handlePublishDashboard","setItem","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","name","to","onClick","onDragOver","onDrop","updatePosition","_c","$RefreshReg$"],"sources":["/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport ChartWidget from '../components/widgets/ChartWidget';\nimport CreateTable from '../components/widgets/CreateTable'; // Import CreateTable\nimport WidgetDrawer from '../components/WidgetDrawer';\nimport TableModal from '../components/TableModal';\n\nfunction Dashboard() {\n  const { path } = useParams();\n  const [widgets, setWidgets] = useState([]);\n  const [headings, setHeadings] = useState([]);\n  const [IsOpen, setIsOpen] = useState(false);\n  const [currentWidgetId, setCurrentWidgetId] = useState(null);\n\n  //function to open the modal\n  function openModal(id) {\n    setCurrentWidgetId(id);\n    setIsOpen(true);\n  }\n\n  //function to get the stored dashboard\n  useEffect(() => {\n    const storedDashboard = JSON.parse(localStorage.getItem(`dashboard_${path}`)) || [];\n    setWidgets(storedDashboard);\n  }, [path]);\n\n  //function to receive the new headings and update in widgets\n  function handleHeadings(id, headers) {\n    setWidgets((prevWidgets) => prevWidgets.map((widget) => (widget.id === id ? { ...widget, headings: headers } : widget)));\n  }\n\n  //function to handle drop\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const widgetType = e.dataTransfer.getData('widgetType');\n    if (!widgetType) return;\n\n    let newWidget = {};\n    if (widgetType === \"Table\") {\n      const id = `widget_${Date.now()}`;\n      newWidget = {\n        id: id,\n        type: widgetType,\n        x: 350,\n        y: 50,\n        width: 500,\n        height: 300,\n        headings: headings,\n      };\n      openModal(id);\n    } else if (widgetType === \"Chart\") {\n      newWidget = {\n        id: `widget_${Date.now()}`,\n        type: widgetType,\n        x: 350,\n        y: 50,\n        width: 500,\n        height: 300,\n        chartType: 'Bar',\n        filters: { startDate: '2024-03-16', endDate: '2025-08-20' },\n      };\n    }\n\n    setWidgets((prevWidgets) => Array.isArray(prevWidgets) ? [...prevWidgets, newWidget] : [newWidget]);\n  };\n\n  //function to update widget's position and dimension\n  const updateWidgetPosition = (id, x, y, width, height) => {\n    setWidgets((prevWidgets) =>\n      prevWidgets.map((widget) => (widget.id === id ? { ...widget, x, y, width, height } : widget))\n    );\n  };\n\n  //function to delete widget\n  const handleDeleteWidget = (id) => {\n    setWidgets((prevWidgets) => prevWidgets.filter(widget => widget.id !== id));\n  };\n\n  //function to publish and store the data of the dashboard\n  const handlePublishDashboard = () => {\n    localStorage.setItem(`dashboard_${path}`, JSON.stringify(widgets));\n    alert('Dashboard Published!');\n  };\n\n  return (\n    <div className='flex h-screen mt-3'>\n      <div className='border-r-2 flex flex-col text-center w-1/5 border-gray-500'>\n        <h1 className='font-bold text-[#062F6F]'>WIDGETS</h1>\n        <div>\n          {['Chart', 'Table'].map((widget, index) => (\n            <WidgetDrawer key={index} name={widget} type={widget} />\n          ))}\n        </div>\n        <Link to=\"/\" onClick={handlePublishDashboard} className='bg-[#5779E8] mx-4 p-2 hover:bg-[#062F6F] text-white font-bold rounded mt-4'>\n          Publish\n        </Link>\n      </div>\n\n      <div className='w-4/5 text-center' onDragOver={(e) => e.preventDefault()} onDrop={handleDrop}>\n        <h1 className='font-bold text-[#062F6F]'>YOUR DASHBOARD </h1>\n        {widgets.map((widget) => {\n          if (widget.type === 'Chart') {\n            return (\n              <ChartWidget\n                key={widget.id}\n                id={widget.id}\n                x={widget.x}\n                y={widget.y}\n                width={widget.width}\n                height={widget.height}\n                chartType={widget.chartType}\n                updatePosition={updateWidgetPosition}\n                handleDeleteWidget={handleDeleteWidget}\n              />\n            );\n          } else if (widget.type === 'Table') {\n            return (\n              <CreateTable\n                key={widget.id}\n                id={widget.id}\n                x={widget.x}\n                y={widget.y}\n                headings={widget.headings || ['Manufacturer']}\n                width={widget.width}\n                height={widget.height}\n                updatePosition={updateWidgetPosition}\n                handleDeleteWidget={handleDeleteWidget}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n        <TableModal id={currentWidgetId} headings={headings} setHeadings={setHeadings} IsOpen={IsOpen} setIsOpen={setIsOpen} handleHeadings={handleHeadings} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}