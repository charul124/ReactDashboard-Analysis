{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardImg from \"../Images/DashboardImg.png\";\nimport PropTypes from 'prop-types';\nfunction AvailableDashboard({\n  dashboards,\n  handleDeleteDashboard\n}) {\n  _s();\n  useEffect(() => {\n    const fetchDashboards = async () => {\n      try {\n        const response = await fetch('http://localhost:3003');\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDashboards();\n  }, []);\n  // return (\n  //   <div className='absolute bottom-10'>\n  //     {/* Display header based on whether dashboards exist */}\n  //     {Array.isArray(dashboards) && dashboards.length ? (\n  //       <h2 className='text-2xl font-bold text-[#062F6F] text-left px-5 mb-5'>Available Dashboards</h2>\n  //     ) : (\n  //       <h2 className='text-2xl font-bold text-[#062F6F] text-left px-5 mb-5'>No Dashboards Available</h2>\n  //     )}\n\n  //     <div className='flex'>\n  //       {/* Iterate through dashboards and render each */}\n  //       {dashboards.map((dashboard, index) => (\n  //         <div className='flex flex-col text-start shadow-md w-52 rounded-md m-4' key={index}>\n  //           {/* Delete button */}\n  //           <button className=\"text-lg flex ml-2 text-[#D5074D]\" onClick={() => handleDeleteDashboard(dashboard.path)}>\n  //             x\n  //           </button>\n  //           {/* Dashboard image */}\n  //           <img src={DashboardImg} alt=\"Dashboard Preview\" />\n  //           {/* Dashboard details */}\n  //           <h2 className='text-lg ml-3 font-bold'>{dashboard.name}</h2>\n  //           <p className='flex-1 ml-3'>{dashboard.description}</p>\n  //           {/* Link to view the dashboard */}\n  //           <Link className=\"border border-slate-800 hover:bg-[#D0DBF8] rounded-md text-center m-2 p-1 text-sm\" to={`/dashboard/${dashboard.path}`}>\n  //             View Dashboard\n  //           </Link>\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n}\n\n// Define prop types for type safety\n_s(AvailableDashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AvailableDashboard;\nAvailableDashboard.propTypes = {\n  dashboards: PropTypes.array.isRequired,\n  handleDeleteDashboard: PropTypes.func.isRequired\n};\nexport default AvailableDashboard;\nvar _c;\n$RefreshReg$(_c, \"AvailableDashboard\");","map":{"version":3,"names":["React","useEffect","Link","DashboardImg","PropTypes","AvailableDashboard","dashboards","handleDeleteDashboard","_s","fetchDashboards","response","fetch","data","json","console","log","error","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/AvailableDashboard.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardImg from \"../Images/DashboardImg.png\";\nimport PropTypes from 'prop-types';\n\nfunction AvailableDashboard({ dashboards, handleDeleteDashboard }) {\n  useEffect(() => {\n    const fetchDashboards = async () => {\n      try {\n        const response = await fetch('http://localhost:3003');\n        const data = await response.json();\n        console.log(data);\n      }\n      catch (error) {\n        console.error(error);\n      }\n    }\n    fetchDashboards();\n  },[])\n  // return (\n  //   <div className='absolute bottom-10'>\n  //     {/* Display header based on whether dashboards exist */}\n  //     {Array.isArray(dashboards) && dashboards.length ? (\n  //       <h2 className='text-2xl font-bold text-[#062F6F] text-left px-5 mb-5'>Available Dashboards</h2>\n  //     ) : (\n  //       <h2 className='text-2xl font-bold text-[#062F6F] text-left px-5 mb-5'>No Dashboards Available</h2>\n  //     )}\n\n  //     <div className='flex'>\n  //       {/* Iterate through dashboards and render each */}\n  //       {dashboards.map((dashboard, index) => (\n  //         <div className='flex flex-col text-start shadow-md w-52 rounded-md m-4' key={index}>\n  //           {/* Delete button */}\n  //           <button className=\"text-lg flex ml-2 text-[#D5074D]\" onClick={() => handleDeleteDashboard(dashboard.path)}>\n  //             x\n  //           </button>\n  //           {/* Dashboard image */}\n  //           <img src={DashboardImg} alt=\"Dashboard Preview\" />\n  //           {/* Dashboard details */}\n  //           <h2 className='text-lg ml-3 font-bold'>{dashboard.name}</h2>\n  //           <p className='flex-1 ml-3'>{dashboard.description}</p>\n  //           {/* Link to view the dashboard */}\n  //           <Link className=\"border border-slate-800 hover:bg-[#D0DBF8] rounded-md text-center m-2 p-1 text-sm\" to={`/dashboard/${dashboard.path}`}>\n  //             View Dashboard\n  //           </Link>\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n}\n\n// Define prop types for type safety\nAvailableDashboard.propTypes = {\n  dashboards: PropTypes.array.isRequired,\n  handleDeleteDashboard: PropTypes.func.isRequired,\n};\n\nexport default AvailableDashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,kBAAkBA,CAAC;EAAEC,UAAU;EAAEC;AAAsB,CAAC,EAAE;EAAAC,EAAA;EACjEP,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;QACrD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACnB,CAAC,CACD,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDP,eAAe,CAAC,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA;AAAAD,EAAA,CA/CSH,kBAAkB;AAAAY,EAAA,GAAlBZ,kBAAkB;AAgD3BA,kBAAkB,CAACa,SAAS,GAAG;EAC7BZ,UAAU,EAAEF,SAAS,CAACe,KAAK,CAACC,UAAU;EACtCb,qBAAqB,EAAEH,SAAS,CAACiB,IAAI,CAACD;AACxC,CAAC;AAED,eAAef,kBAAkB;AAAC,IAAAY,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}