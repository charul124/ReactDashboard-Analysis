{"ast":null,"code":"var _jsxFileName = \"/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/CreateModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateModal({\n  dashboards,\n  setDashboards,\n  modalIsOpen,\n  setIsOpen\n}) {\n  _s();\n  // State variables to store user input values\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [path, setPath] = useState(\"\");\n\n  // Handlers to update state based on user input\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n  function handlePathChange(e) {\n    setPath(e.target.value);\n  }\n\n  // Load dashboards from localStorage when the component mounts\n  useEffect(() => {\n    const storedDashboards = JSON.parse(localStorage.getItem(\"dashboards\")) || [];\n    setDashboards(storedDashboards);\n  }, [setDashboards]);\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Create a new dashboard object\n    const newDashboard = {\n      name: name,\n      description: description,\n      path: path\n    };\n\n    // Store the new dashboard in localStorage\n    localStorage.setItem(`dashboard_${path}`, JSON.stringify(newDashboard));\n\n    // Update the dashboards state and localStorage\n    const updatedDashboards = [...dashboards, newDashboard];\n    setDashboards(updatedDashboards);\n    localStorage.setItem(\"dashboards\", JSON.stringify(updatedDashboards));\n\n    // Reset form fields\n    setName(\"\");\n    setDescription(\"\");\n    setPath(\"\");\n  }\n\n  // Function to close the modal\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  // Custom styles for the modal overlay\n  const modalStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"h-1/2 absolute top-24 left-1/3 rounded w-1/3 bg-slate-50 shadow\",\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: modalStyles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"p-5\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-3 flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg font-bold\",\n              htmlFor: \"dashboard-name\",\n              children: \"Dashboard Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"rounded p-2 border\",\n              onChange: handleNameChange,\n              placeholder: \"Your Dashboard Name\",\n              type: \"text\",\n              value: name,\n              name: \"dashboard-name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-3 flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg font-bold\",\n              htmlFor: \"dashboard-description\",\n              children: \"Dashboard Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"rounded p-2 border\",\n              onChange: handleDescriptionChange,\n              placeholder: \"Add Description\",\n              name: \"dashboard-description\",\n              value: description,\n              id: \"dashboard-description\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg font-bold\",\n              htmlFor: \"dashboard-path\",\n              children: \"Dashboard Path:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"rounded p-2 border\",\n              onChange: handlePathChange,\n              placeholder: \"Path to store your dashboard\",\n              type: \"text\",\n              value: path,\n              name: \"dashboard-path\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-[#062F6F] hover:bg-[#5779E8] text-white rounded w-full p-1 mt-4\",\n              onClick: e => {\n                handleSubmit(e);\n                closeModal();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-[#5779E8] text-white rounded w-full p-1 mt-2\",\n              onClick: closeModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n// Define prop types for better validation\n_s(CreateModal, \"1fodmRJraqaBkkDoH97FUUcda+0=\");\n_c = CreateModal;\nCreateModal.propTypes = {\n  modalIsOpen: PropTypes.bool.isRequired,\n  dashboards: PropTypes.array,\n  setDashboards: PropTypes.func,\n  setIsOpen: PropTypes.func\n};\nexport default CreateModal;\nvar _c;\n$RefreshReg$(_c, \"CreateModal\");","map":{"version":3,"names":["useState","useEffect","React","Modal","PropTypes","jsxDEV","_jsxDEV","CreateModal","dashboards","setDashboards","modalIsOpen","setIsOpen","_s","name","setName","description","setDescription","path","setPath","handleNameChange","e","target","value","handleDescriptionChange","handlePathChange","storedDashboards","JSON","parse","localStorage","getItem","handleSubmit","preventDefault","newDashboard","setItem","stringify","updatedDashboards","closeModal","modalStyles","overlay","backgroundColor","children","className","isOpen","onRequestClose","style","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","type","required","id","onClick","_c","propTypes","bool","isRequired","array","func","$RefreshReg$"],"sources":["/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/CreateModal.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\n\n\nfunction CreateModal({ dashboards, setDashboards, modalIsOpen, setIsOpen }) {\n    \n    // State variables to store user input values\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [path, setPath] = useState(\"\");\n\n    // Handlers to update state based on user input\n    function handleNameChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value);\n    }\n\n    function handlePathChange(e) {\n        setPath(e.target.value);\n    }\n\n    // Load dashboards from localStorage when the component mounts\n    useEffect(() => {\n        const storedDashboards = JSON.parse(localStorage.getItem(\"dashboards\")) || []; \n        setDashboards(storedDashboards);\n    }, [setDashboards]); \n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        // Create a new dashboard object\n        const newDashboard = {\n            name: name,\n            description: description,\n            path: path\n        };\n        \n        // Store the new dashboard in localStorage\n        localStorage.setItem(`dashboard_${path}`, JSON.stringify(newDashboard));\n\n        // Update the dashboards state and localStorage\n        const updatedDashboards = [...dashboards, newDashboard];\n        setDashboards(updatedDashboards);\n        localStorage.setItem(\"dashboards\", JSON.stringify(updatedDashboards));\n\n        // Reset form fields\n        setName(\"\");\n        setDescription(\"\");\n        setPath(\"\");\n    }\n\n    // Function to close the modal\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    // Custom styles for the modal overlay\n    const modalStyles = {\n        overlay: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        },\n    };\n\n    return (\n        <div>\n            <Modal\n                className=\"h-1/2 absolute top-24 left-1/3 rounded w-1/3 bg-slate-50 shadow\"\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={modalStyles}\n            >\n                <div className=\"mt-3\">\n                    {/* Form to collect dashboard details */}\n                    <form className=\"p-5\" onSubmit={handleSubmit}>\n                        {/* Input field for dashboard name */}\n                        <div className=\"flex mb-3 flex-col\">\n                            <label className=\"text-lg font-bold\" htmlFor=\"dashboard-name\">Dashboard Name:</label>\n                            <input \n                                className=\"rounded p-2 border\"\n                                onChange={handleNameChange}\n                                placeholder=\"Your Dashboard Name\" \n                                type=\"text\"\n                                value={name} \n                                name=\"dashboard-name\" \n                                required \n                            />\n                        </div>\n\n                        {/* Input field for dashboard description */}\n                        <div className=\"flex mb-3 flex-col\">\n                            <label className=\"text-lg font-bold\" htmlFor=\"dashboard-description\">Dashboard Description:</label>\n                            <textarea \n                                className=\"rounded p-2 border\"\n                                onChange={handleDescriptionChange}\n                                placeholder=\"Add Description\" \n                                name=\"dashboard-description\" \n                                value={description} \n                                id=\"dashboard-description\" \n                                required\n                            ></textarea>\n                        </div>\n\n                        {/* Input field for dashboard path */}\n                        <div className=\"flex flex-col\">\n                            <label className=\"text-lg font-bold\" htmlFor=\"dashboard-path\">Dashboard Path:</label>\n                            <input \n                                className=\"rounded p-2 border\"\n                                onChange={handlePathChange} \n                                placeholder=\"Path to store your dashboard\" \n                                type=\"text\" \n                                value={path} \n                                name=\"dashboard-path\" \n                                required \n                            />\n                        </div>\n\n                        {/* Submit and Close buttons */}\n                        <div>\n                            <button \n                                className=\"bg-[#062F6F] hover:bg-[#5779E8] text-white rounded w-full p-1 mt-4\" \n                                onClick={(e) => { handleSubmit(e); closeModal(); }} \n                            >\n                                Submit\n                            </button>\n                            <button \n                                className=\"bg-[#5779E8] text-white rounded w-full p-1 mt-2\" \n                                onClick={closeModal}\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\n// Define prop types for better validation\nCreateModal.propTypes = {\n    modalIsOpen: PropTypes.bool.isRequired,\n    dashboards: PropTypes.array,\n    setDashboards: PropTypes.func,\n    setIsOpen: PropTypes.func\n};\n\nexport default CreateModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}