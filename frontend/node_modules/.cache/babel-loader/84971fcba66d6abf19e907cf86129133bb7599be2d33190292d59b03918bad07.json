{"ast":null,"code":"var _jsxFileName = \"/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/CreateModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateModal({\n  dashboards,\n  setDashboards,\n  modalIsOpen,\n  setIsOpen\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [path, setPath] = useState(\"\");\n  const widgets = {\n    \"Table\": [],\n    \"Chart\": []\n  };\n  useEffect(() => {\n    // Fetch dashboards from backend and update state\n    const fetchDashboards = async () => {\n      try {\n        const response = await fetch('http://localhost:3003/');\n        const data = await response.json();\n        setDashboards(data);\n      } catch (err) {\n        console.error(\"Error fetching dashboards:\", err);\n      }\n    };\n    fetchDashboards();\n  }, [setDashboards]);\n  const dashboardData = async e => {\n    e.preventDefault();\n    try {\n      const requestBody = {\n        name,\n        description,\n        path,\n        widgets\n      };\n      console.log(\"Request Body:\", requestBody); // Log the request body\n\n      let result = await fetch('http://localhost:3003/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      result = await result.json();\n      console.log(result);\n\n      // Update state with the new dashboard\n      setDashboards([...dashboards, result]);\n\n      // Reset form fields\n      setName(\"\");\n      setDescription(\"\");\n      setPath(\"\");\n      closeModal();\n    } catch (err) {\n      console.error(\"Error posting dashboard:\", err);\n    }\n  };\n  function closeModal() {\n    setIsOpen(false);\n  }\n  const modalStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"h-1/2 absolute top-24 left-1/3 rounded w-1/3 bg-slate-50 shadow\",\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: modalStyles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"p-5\",\n          onSubmit: dashboardData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-3 flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg font-bold\",\n              htmlFor: \"dashboard-name\",\n              children: \"Dashboard Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"rounded p-2 border\",\n              onChange: e => setName(e.target.value),\n              placeholder: \"Your Dashboard Name\",\n              type: \"text\",\n              value: name,\n              name: \"dashboard-name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-3 flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg font-bold\",\n              htmlFor: \"dashboard-description\",\n              children: \"Dashboard Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"rounded p-2 border\",\n              onChange: e => setDescription(e.target.value),\n              placeholder: \"Add Description\",\n              name: \"dashboard-description\",\n              value: description,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg font-bold\",\n              htmlFor: \"dashboard-path\",\n              children: \"Dashboard Path:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"rounded p-2 border\",\n              onChange: e => setPath(e.target.value),\n              placeholder: \"Path to store your dashboard\",\n              type: \"text\",\n              value: path,\n              name: \"dashboard-path\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-[#062F6F] hover:bg-[#5779E8] text-white rounded w-full p-1 mt-4\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-[#5779E8] text-white rounded w-full p-1 mt-2\",\n              type: \"button\",\n              onClick: closeModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateModal, \"1fodmRJraqaBkkDoH97FUUcda+0=\");\n_c = CreateModal;\nCreateModal.propTypes = {\n  modalIsOpen: PropTypes.bool.isRequired,\n  dashboards: PropTypes.array,\n  setDashboards: PropTypes.func.isRequired,\n  setIsOpen: PropTypes.func.isRequired\n};\nexport default CreateModal;\nvar _c;\n$RefreshReg$(_c, \"CreateModal\");","map":{"version":3,"names":["useState","useEffect","React","Modal","PropTypes","jsxDEV","_jsxDEV","CreateModal","dashboards","setDashboards","modalIsOpen","setIsOpen","_s","name","setName","description","setDescription","path","setPath","widgets","fetchDashboards","response","fetch","data","json","err","console","error","dashboardData","e","preventDefault","requestBody","log","result","method","headers","body","JSON","stringify","closeModal","modalStyles","overlay","backgroundColor","children","className","isOpen","onRequestClose","style","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","placeholder","type","required","onClick","_c","propTypes","bool","isRequired","array","func","$RefreshReg$"],"sources":["/Users/caletiwar/Desktop/Dashboard-Builder-React-charul/frontend/src/components/CreateModal.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\n\nfunction CreateModal({ dashboards, setDashboards, modalIsOpen, setIsOpen }) {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [path, setPath] = useState(\"\");\n    const widgets = {\"Table\": [], \"Chart\": []};\n\n    useEffect(() => {\n        // Fetch dashboards from backend and update state\n        const fetchDashboards = async () => {\n            try {\n                const response = await fetch('http://localhost:3003/');\n                const data = await response.json();\n                setDashboards(data);\n            } catch (err) {\n                console.error(\"Error fetching dashboards:\", err);\n            }\n        };\n        fetchDashboards();\n    }, [setDashboards]);\n\n    const dashboardData = async (e) => {\n        e.preventDefault();\n        try {\n            const requestBody = { name, description, path, widgets };\n            console.log(\"Request Body:\", requestBody); // Log the request body\n    \n            let result = await fetch('http://localhost:3003/post', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(requestBody),\n            });\n    \n            result = await result.json();\n            console.log(result);\n    \n            // Update state with the new dashboard\n            setDashboards([...dashboards, result]);\n    \n            // Reset form fields\n            setName(\"\");\n            setDescription(\"\");\n            setPath(\"\");\n            closeModal();\n        } catch (err) {\n            console.error(\"Error posting dashboard:\", err);\n        }\n    };\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    const modalStyles = {\n        overlay: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        },\n    };\n\n    return (\n        <div>\n            <Modal\n                className=\"h-1/2 absolute top-24 left-1/3 rounded w-1/3 bg-slate-50 shadow\"\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={modalStyles}\n            >\n                <div className=\"mt-3\">\n                    <form className=\"p-5\" onSubmit={dashboardData}>\n                        <div className=\"flex mb-3 flex-col\">\n                            <label className=\"text-lg font-bold\" htmlFor=\"dashboard-name\">Dashboard Name:</label>\n                            <input \n                                className=\"rounded p-2 border\"\n                                onChange={(e) => setName(e.target.value)}\n                                placeholder=\"Your Dashboard Name\" \n                                type=\"text\"\n                                value={name} \n                                name=\"dashboard-name\" \n                                required \n                            />\n                        </div>\n\n                        <div className=\"flex mb-3 flex-col\">\n                            <label className=\"text-lg font-bold\" htmlFor=\"dashboard-description\">Dashboard Description:</label>\n                            <textarea \n                                className=\"rounded p-2 border\"\n                                onChange={(e) => setDescription(e.target.value)}\n                                placeholder=\"Add Description\" \n                                name=\"dashboard-description\" \n                                value={description} \n                                required\n                            ></textarea>\n                        </div>\n\n                        <div className=\"flex flex-col\">\n                            <label className=\"text-lg font-bold\" htmlFor=\"dashboard-path\">Dashboard Path:</label>\n                            <input \n                                className=\"rounded p-2 border\"\n                                onChange={(e) => setPath(e.target.value)}\n                                placeholder=\"Path to store your dashboard\" \n                                type=\"text\" \n                                value={path} \n                                name=\"dashboard-path\" \n                                required \n                            />\n                        </div>\n\n                        <div>\n                            <button \n                                className=\"bg-[#062F6F] hover:bg-[#5779E8] text-white rounded w-full p-1 mt-4\" \n                                type=\"submit\"\n                            >\n                                Submit\n                            </button>\n                            <button \n                                className=\"bg-[#5779E8] text-white rounded w-full p-1 mt-2\" \n                                type=\"button\"\n                                onClick={closeModal}\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nCreateModal.propTypes = {\n    modalIsOpen: PropTypes.bool.isRequired,\n    dashboards: PropTypes.array,\n    setDashboards: PropTypes.func.isRequired,\n    setIsOpen: PropTypes.func.isRequired\n};\n\nexport default CreateModal;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC,aAAa;EAAEC,WAAW;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMmB,OAAO,GAAG;IAAC,OAAO,EAAE,EAAE;IAAE,OAAO,EAAE;EAAE,CAAC;EAE1ClB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMmB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;QACtD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCf,aAAa,CAACc,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MACpD;IACJ,CAAC;IACDL,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EAEnB,MAAMmB,aAAa,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,WAAW,GAAG;QAAElB,IAAI;QAAEE,WAAW;QAAEE,IAAI;QAAEE;MAAQ,CAAC;MACxDO,OAAO,CAACM,GAAG,CAAC,eAAe,EAAED,WAAW,CAAC,CAAC,CAAC;;MAE3C,IAAIE,MAAM,GAAG,MAAMX,KAAK,CAAC,4BAA4B,EAAE;QACnDY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;MACpC,CAAC,CAAC;MAEFE,MAAM,GAAG,MAAMA,MAAM,CAACT,IAAI,CAAC,CAAC;MAC5BE,OAAO,CAACM,GAAG,CAACC,MAAM,CAAC;;MAEnB;MACAxB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEyB,MAAM,CAAC,CAAC;;MAEtC;MACAnB,OAAO,CAAC,EAAE,CAAC;MACXE,cAAc,CAAC,EAAE,CAAC;MAClBE,OAAO,CAAC,EAAE,CAAC;MACXqB,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOd,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAClD;EACJ,CAAC;EAED,SAASc,UAAUA,CAAA,EAAG;IAClB5B,SAAS,CAAC,KAAK,CAAC;EACpB;EAEA,MAAM6B,WAAW,GAAG;IAChBC,OAAO,EAAE;MACLC,eAAe,EAAE;IACrB;EACJ,CAAC;EAED,oBACIpC,OAAA;IAAAqC,QAAA,eACIrC,OAAA,CAACH,KAAK;MACFyC,SAAS,EAAC,iEAAiE;MAC3EC,MAAM,EAAEnC,WAAY;MACpBoC,cAAc,EAAEP,UAAW;MAC3BQ,KAAK,EAAEP,WAAY;MAAAG,QAAA,eAEnBrC,OAAA;QAAKsC,SAAS,EAAC,MAAM;QAAAD,QAAA,eACjBrC,OAAA;UAAMsC,SAAS,EAAC,KAAK;UAACI,QAAQ,EAAEpB,aAAc;UAAAe,QAAA,gBAC1CrC,OAAA;YAAKsC,SAAS,EAAC,oBAAoB;YAAAD,QAAA,gBAC/BrC,OAAA;cAAOsC,SAAS,EAAC,mBAAmB;cAACK,OAAO,EAAC,gBAAgB;cAAAN,QAAA,EAAC;YAAe;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrF/C,OAAA;cACIsC,SAAS,EAAC,oBAAoB;cAC9BU,QAAQ,EAAGzB,CAAC,IAAKf,OAAO,CAACe,CAAC,CAAC0B,MAAM,CAACC,KAAK,CAAE;cACzCC,WAAW,EAAC,qBAAqB;cACjCC,IAAI,EAAC,MAAM;cACXF,KAAK,EAAE3C,IAAK;cACZA,IAAI,EAAC,gBAAgB;cACrB8C,QAAQ;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEN/C,OAAA;YAAKsC,SAAS,EAAC,oBAAoB;YAAAD,QAAA,gBAC/BrC,OAAA;cAAOsC,SAAS,EAAC,mBAAmB;cAACK,OAAO,EAAC,uBAAuB;cAAAN,QAAA,EAAC;YAAsB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnG/C,OAAA;cACIsC,SAAS,EAAC,oBAAoB;cAC9BU,QAAQ,EAAGzB,CAAC,IAAKb,cAAc,CAACa,CAAC,CAAC0B,MAAM,CAACC,KAAK,CAAE;cAChDC,WAAW,EAAC,iBAAiB;cAC7B5C,IAAI,EAAC,uBAAuB;cAC5B2C,KAAK,EAAEzC,WAAY;cACnB4C,QAAQ;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eAEN/C,OAAA;YAAKsC,SAAS,EAAC,eAAe;YAAAD,QAAA,gBAC1BrC,OAAA;cAAOsC,SAAS,EAAC,mBAAmB;cAACK,OAAO,EAAC,gBAAgB;cAAAN,QAAA,EAAC;YAAe;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrF/C,OAAA;cACIsC,SAAS,EAAC,oBAAoB;cAC9BU,QAAQ,EAAGzB,CAAC,IAAKX,OAAO,CAACW,CAAC,CAAC0B,MAAM,CAACC,KAAK,CAAE;cACzCC,WAAW,EAAC,8BAA8B;cAC1CC,IAAI,EAAC,MAAM;cACXF,KAAK,EAAEvC,IAAK;cACZJ,IAAI,EAAC,gBAAgB;cACrB8C,QAAQ;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEN/C,OAAA;YAAAqC,QAAA,gBACIrC,OAAA;cACIsC,SAAS,EAAC,oEAAoE;cAC9Ec,IAAI,EAAC,QAAQ;cAAAf,QAAA,EAChB;YAED;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT/C,OAAA;cACIsC,SAAS,EAAC,iDAAiD;cAC3Dc,IAAI,EAAC,QAAQ;cACbE,OAAO,EAAErB,UAAW;cAAAI,QAAA,EACvB;YAED;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACzC,EAAA,CAhIQL,WAAW;AAAAsD,EAAA,GAAXtD,WAAW;AAkIpBA,WAAW,CAACuD,SAAS,GAAG;EACpBpD,WAAW,EAAEN,SAAS,CAAC2D,IAAI,CAACC,UAAU;EACtCxD,UAAU,EAAEJ,SAAS,CAAC6D,KAAK;EAC3BxD,aAAa,EAAEL,SAAS,CAAC8D,IAAI,CAACF,UAAU;EACxCrD,SAAS,EAAEP,SAAS,CAAC8D,IAAI,CAACF;AAC9B,CAAC;AAED,eAAezD,WAAW;AAAC,IAAAsD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}